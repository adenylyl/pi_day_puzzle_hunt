# Generated by Django 2.2 on 2020-02-05 04:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import huntserver.models


class Migration(migrations.Migration):

    dependencies = [
        ('huntserver', '0041_auto_20200110_1408'),
    ]

    operations = [
        migrations.AlterField(
            model_name='hint',
            name='last_modified_time',
            field=models.DateTimeField(help_text='Last time of modification'),
        ),
        migrations.AlterField(
            model_name='hint',
            name='puzzle',
            field=models.ForeignKey(help_text='The puzzle that this hint is related to', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='hint',
            name='request',
            field=models.CharField(help_text='The text of the request for the hint', max_length=400),
        ),
        migrations.AlterField(
            model_name='hint',
            name='request_time',
            field=models.DateTimeField(help_text='Hint request time'),
        ),
        migrations.AlterField(
            model_name='hint',
            name='response',
            field=models.CharField(blank=True, help_text='The text of the response to the hint request', max_length=400),
        ),
        migrations.AlterField(
            model_name='hint',
            name='response_time',
            field=models.DateTimeField(blank=True, help_text='Hint response time', null=True),
        ),
        migrations.AlterField(
            model_name='hint',
            name='team',
            field=models.ForeignKey(help_text='The team that requested the hint', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Team'),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='display_end_date',
            field=models.DateTimeField(help_text='The end date/time displayed to users'),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='display_start_date',
            field=models.DateTimeField(help_text='The start date/time displayed to users'),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='end_date',
            field=models.DateTimeField(help_text='The date/time at which a hunt will be archived and available to the public'),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='extra_data',
            field=models.CharField(blank=True, help_text='A misc. field for any extra data to be stored with the hunt.', max_length=200),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='hunt_name',
            field=models.CharField(help_text='The name of the hunt as the public will see it', max_length=200),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='hunt_number',
            field=models.IntegerField(help_text='A number used internally for hunt sorting, must be unique', unique=True),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='location',
            field=models.CharField(help_text='Starting location of the puzzlehunt', max_length=100),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='resource_link',
            field=models.URLField(blank=True, help_text='The full link (needs http://) to a folder of additional resources.'),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='start_date',
            field=models.DateTimeField(help_text='The date/time at which a hunt will become visible to registered users'),
        ),
        migrations.AlterField(
            model_name='hunt',
            name='template',
            field=models.TextField(default='', help_text='The template string to be rendered to HTML on the hunt page'),
        ),
        migrations.AlterField(
            model_name='huntassetfile',
            name='file',
            field=models.FileField(storage=huntserver.models.OverwriteStorage(), upload_to='hunt/assets/'),
        ),
        migrations.AlterField(
            model_name='message',
            name='is_response',
            field=models.BooleanField(help_text='A boolean representing whether or not the message is from the staff'),
        ),
        migrations.AlterField(
            model_name='message',
            name='team',
            field=models.ForeignKey(help_text='The team that this message is being sent to/from', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Team'),
        ),
        migrations.AlterField(
            model_name='message',
            name='text',
            field=models.CharField(help_text='Message text', max_length=400),
        ),
        migrations.AlterField(
            model_name='message',
            name='time',
            field=models.DateTimeField(help_text='Message send time'),
        ),
        migrations.AlterField(
            model_name='person',
            name='allergies',
            field=models.CharField(blank=True, help_text='Allergy information for the person', max_length=400),
        ),
        migrations.AlterField(
            model_name='person',
            name='comments',
            field=models.CharField(blank=True, help_text='Comments or other notes about the person', max_length=400),
        ),
        migrations.AlterField(
            model_name='person',
            name='is_shib_acct',
            field=models.BooleanField(help_text='A boolean to indicate if the person uses shibboleth authentication for login'),
        ),
        migrations.AlterField(
            model_name='person',
            name='phone',
            field=models.CharField(blank=True, help_text="Person's phone number, no particular formatting", max_length=20),
        ),
        migrations.AlterField(
            model_name='person',
            name='teams',
            field=models.ManyToManyField(blank=True, help_text='Teams that the person is on', to='huntserver.Team'),
        ),
        migrations.AlterField(
            model_name='person',
            name='user',
            field=models.OneToOneField(help_text='The corresponding user to this person', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='prepuzzle',
            name='answer',
            field=models.CharField(help_text='The answer to the puzzle, not case sensitive', max_length=100),
        ),
        migrations.AlterField(
            model_name='prepuzzle',
            name='hunt',
            field=models.OneToOneField(blank=True, help_text='The hunt that this puzzle is a part of, leave blank for no associated hunt.', null=True, on_delete=django.db.models.deletion.CASCADE, to='huntserver.Hunt'),
        ),
        migrations.AlterField(
            model_name='prepuzzle',
            name='puzzle_name',
            field=models.CharField(help_text='The name of the puzzle as it will be seen by hunt participants', max_length=200),
        ),
        migrations.AlterField(
            model_name='prepuzzle',
            name='resource_link',
            field=models.URLField(blank=True, help_text='The full link (needs http://) to a folder of additional resources.'),
        ),
        migrations.AlterField(
            model_name='prepuzzle',
            name='response_string',
            field=models.TextField(default='', help_text='Data returned to the webpage for use upon solving.'),
        ),
        migrations.AlterField(
            model_name='prepuzzle',
            name='template',
            field=models.TextField(default='{% extends "prepuzzle.html" %}\r\n{% load prepuzzle_tags %}\r\n\r\n{% block content %}\r\n{% endblock content %}', help_text='The template string to be rendered to HTML on the hunt page'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='answer',
            field=models.CharField(help_text='The answer to the puzzle, not case sensitive', max_length=100),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='extra_data',
            field=models.CharField(blank=True, help_text='A misc. field for any extra data to be stored with the puzzle.', max_length=200),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='hunt',
            field=models.ForeignKey(help_text='The hunt that this puzzle is a part of', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Hunt'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='is_html_puzzle',
            field=models.BooleanField(default=False, help_text="Does this puzzle use an HTML folder as it's source?"),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='is_meta',
            field=models.BooleanField(default=False, help_text='Is this puzzle a meta-puzzle?'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='link',
            field=models.URLField(blank=True, help_text='The full link (needs http://) to a publicly accessible PDF of the puzzle'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='num_pages',
            field=models.IntegerField(help_text='Number of pages in the PDF for this puzzle. Set automatically upon download'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='num_required_to_unlock',
            field=models.IntegerField(default=1, help_text='Number of prerequisite puzzles that need to be solved to unlock this puzzle'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='puzzle_id',
            field=models.CharField(help_text='A 3-5 character hex string that uniquely identifies the puzzle', max_length=8, unique=True),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='puzzle_name',
            field=models.CharField(help_text='The name of the puzzle as it will be seen by hunt participants', max_length=200),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='puzzle_number',
            field=models.IntegerField(help_text='The number of the puzzle within the hunt, for sorting purposes'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='resource_link',
            field=models.URLField(blank=True, help_text='The full link (needs http://) to a folder of additional resources.'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='solution_link',
            field=models.URLField(blank=True, help_text='The full link (needs http://) to a publicly accessible PDF of the solution'),
        ),
        migrations.AlterField(
            model_name='puzzle',
            name='unlocks',
            field=models.ManyToManyField(blank=True, help_text='Puzzles that this puzzle is a possible prerequisite for', to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='response',
            name='puzzle',
            field=models.ForeignKey(help_text='The puzzle that this automated response is related to', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='response',
            name='regex',
            field=models.CharField(help_text="The python-style regex that will be checked against the user's response", max_length=400),
        ),
        migrations.AlterField(
            model_name='response',
            name='text',
            field=models.CharField(help_text='The text to use in the submission response if the regex matched', max_length=400),
        ),
        migrations.AlterField(
            model_name='solve',
            name='puzzle',
            field=models.ForeignKey(help_text='The puzzle that this is a solve for', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='solve',
            name='submission',
            field=models.ForeignKey(blank=True, help_text='The submission object that the team submitted to solve the puzzle', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Submission'),
        ),
        migrations.AlterField(
            model_name='solve',
            name='team',
            field=models.ForeignKey(help_text='The team that this solve is from', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Team'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='modified_date',
            field=models.DateTimeField(help_text='Last date/time of response modification'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='puzzle',
            field=models.ForeignKey(help_text='The puzzle that this submission is in response to', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='submission',
            name='response_text',
            field=models.CharField(blank=True, help_text='Response to the given answer. Empty string indicates human response needed', max_length=400),
        ),
        migrations.AlterField(
            model_name='submission',
            name='team',
            field=models.ForeignKey(help_text='The team that made the submission', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Team'),
        ),
        migrations.AlterField(
            model_name='team',
            name='hunt',
            field=models.ForeignKey(help_text='The hunt that the team is a part of', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Hunt'),
        ),
        migrations.AlterField(
            model_name='team',
            name='join_code',
            field=models.CharField(help_text='The 5 character random alphanumeric password needed for a user to join a team', max_length=5),
        ),
        migrations.AlterField(
            model_name='team',
            name='location',
            field=models.CharField(blank=True, help_text='The physical location that the team is solving at', max_length=80),
        ),
        migrations.AlterField(
            model_name='team',
            name='playtester',
            field=models.BooleanField(default=False, help_text='A boolean to indicate if the team is a playtest team and will get early access'),
        ),
        migrations.AlterField(
            model_name='team',
            name='solved',
            field=models.ManyToManyField(blank=True, help_text='The puzzles the team has solved', related_name='solved_for', through='huntserver.Solve', to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='team',
            name='team_name',
            field=models.CharField(help_text='The team name as it will be shown to hunt participants', max_length=200),
        ),
        migrations.AlterField(
            model_name='team',
            name='unlockables',
            field=models.ManyToManyField(blank=True, help_text='The unlockables the team has earned', to='huntserver.Unlockable'),
        ),
        migrations.AlterField(
            model_name='team',
            name='unlocked',
            field=models.ManyToManyField(blank=True, help_text='The puzzles the team has unlocked', related_name='unlocked_for', through='huntserver.Unlock', to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='unlock',
            name='puzzle',
            field=models.ForeignKey(help_text='The puzzle that this is an unlock for', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Puzzle'),
        ),
        migrations.AlterField(
            model_name='unlock',
            name='team',
            field=models.ForeignKey(help_text='The team that this unlocked puzzle is for', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Team'),
        ),
        migrations.AlterField(
            model_name='unlock',
            name='time',
            field=models.DateTimeField(help_text='The time this puzzle was unlocked for this team'),
        ),
        migrations.AlterField(
            model_name='unlockable',
            name='content',
            field=models.CharField(help_text='The link to the content, files must be externally hosted.', max_length=500),
        ),
        migrations.AlterField(
            model_name='unlockable',
            name='content_type',
            field=models.CharField(choices=[('IMG', 'Image'), ('PDF', 'PDF'), ('TXT', 'Text'), ('WEB', 'Link')], default='TXT', help_text="The type of object that is to be unlocked, can be 'IMG', 'PDF', 'TXT', or 'WEB'", max_length=3),
        ),
        migrations.AlterField(
            model_name='unlockable',
            name='puzzle',
            field=models.ForeignKey(help_text='The puzzle that needs to be solved to unlock this object', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Puzzle'),
        ),
        migrations.CreateModel(
            name='HintUnlockPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unlock_type', models.CharField(choices=[('TIM', 'Exact Time Unlock'), ('INT', 'Interval Based Unlock'), ('SOL', 'Solves Based Unlock')], default='TIM', help_text='The type of hint unlock plan', max_length=3)),
                ('unlock_parameter', models.IntegerField(help_text='Parameter (Time / Interval / Solves)')),
                ('num_triggered', models.IntegerField(help_text='Number of times this Unlock Plan has given a hint')),
                ('hunt', models.ForeignKey(help_text='The hunt that this hint unlock plan refers to', on_delete=django.db.models.deletion.CASCADE, to='huntserver.Hunt')),
            ],
        ),
    ]
